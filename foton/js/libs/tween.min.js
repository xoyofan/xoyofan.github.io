void 0 === Date.now && (Date.now = function() {
            return (new Date).valueOf()
        }),
window.TWEEN = function() {
    var e = [],
        t = [],
        n = [];
    return {
        REVISION: "14",
        getAll: function() {
            return e
        },
        removeAll: function() {
            e = []
        },
        add: function(e) {
            t.push(e)
        },
        remove: function(e) {
            n.push(e)
        },
        update: function(i) {
            var r = 0;
            for (i = void 0 !== i ? i : "undefined" != typeof window && void 0 !== window.performance && void 0 !== window.performance.now ? window.performance.now() : Date.now(); r < e.length;) e[r].update(i) ? r++ : e.splice(r, 1);
            return n.length > 0 && (n.forEach(function(t) {
                var n = e.indexOf(t); - 1 !== n && e.splice(n, 1)
            }), n = []), t.length > 0 && (t.forEach(function(t) {
                e.push(t)
            }), t = []), !0
        }
    }
}();
TWEEN.Tween = function(e) {
    var t, n, i, r, o, a, s, l, c, h, u, f, d, p, m, v, g, y, x, w;
    this.reset = function(e) {
        return t = e, n = 0, i = {}, r = {}, o = {}, a = 1e3, s = 0, l = !1, c = !1, h = !1, u = 0, f = null, d = TWEEN.Easing.Linear.None, p = TWEEN.Interpolation.Linear, m = [], v = null, g = !1, y = null, x = null, w = null, this
    }, this.to = function(e, t) {
        return void 0 !== t && (a = t), r = e, this
    }, this.start = function(e) {
        TWEEN.add(this), c = !0, g = !1, f = void 0 !== e ? e : "undefined" != typeof window && void 0 !== window.performance && void 0 !== window.performance.now ? window.performance.now() : Date.now(), f += u;
        for (var n in r) i[n] = t[n], o[n] = i[n] || 0;
        return this
    }, this.stop = function() {
        return c ? (TWEEN.remove(this), c = !1, null !== w && w.call(t), this.stopChainedTweens(), this) : this
    }, this.stopChainedTweens = function() {
        for (var e = 0, t = m.length; t > e; e++) m[e].stop()
    }, this.delay = function(e) {
        return u = e, this
    }, this.repeat = function(e) {
        return s = e, this
    }, this.yoyo = function(e) {
        return l = e, this
    }, this.easing = function(e) {
        return d = e, this
    }, this.interpolation = function(e) {
        return p = e, this
    }, this.chain = function() {
        return m = arguments, this
    }, this.onStart = function(e) {
        return v = e, this
    }, this.onUpdate = function(e) {
        return y = e, this
    }, this.onComplete = function(e) {
        return x = e, this
    }, this.onStop = function(e) {
        return w = e, this
    }, this.update = function(e) {
        var o;
        if (f > e) return !0;
        if (!c) return !1;
        g === !1 && (null !== v && v.call(t), g = !0);
        var s = (e - f) / a;
        s = s > 1 ? 1 : s, n = s;
        var l = d(s);
        for (o in r) {
            var h = i[o] || 0,
                u = r[o];
            t[o] = h + (u - h) * l
        }
        if (null !== y && y.call(t, l), 1 == s) {
            null !== x && x.call(t);
            for (var p = 0, w = m.length; w > p; p++) m[p].start(e);
            return !1
        }
        return !0
    }, this.getProgress = function() {
        return n
    }, void 0 !== e && this.reset(e)
},

TWEEN.Easing = {
    Linear: {
        None: function(e) {
            return e
        }
    },
    Quadratic: {
        In: function(e) {
            return e * e
        },
        Out: function(e) {
            return e * (2 - e)
        },
        InOut: function(e) {
            return (e *= 2) < 1 ? .5 * e * e : -.5 * (--e * (e - 2) - 1)
        }
    },
    Cubic: {
        In: function(e) {
            return e * e * e
        },
        Out: function(e) {
            return --e * e * e + 1
        },
        InOut: function(e) {
            return (e *= 2) < 1 ? .5 * e * e * e : .5 * ((e -= 2) * e * e + 2)
        }
    },
    Quartic: {
        In: function(e) {
            return e * e * e * e
        },
        Out: function(e) {
            return 1 - --e * e * e * e
        },
        InOut: function(e) {
            return (e *= 2) < 1 ? .5 * e * e * e * e : -.5 * ((e -= 2) * e * e * e - 2)
        }
    },
    Quintic: {
        In: function(e) {
            return e * e * e * e * e
        },
        Out: function(e) {
            return --e * e * e * e * e + 1
        },
        InOut: function(e) {
            return (e *= 2) < 1 ? .5 * e * e * e * e * e : .5 * ((e -= 2) * e * e * e * e + 2)
        }
    },
    Sinusoidal: {
        In: function(e) {
            return 1 - Math.cos(e * Math.PI / 2)
        },
        Out: function(e) {
            return Math.sin(e * Math.PI / 2)
        },
        InOut: function(e) {
            return .5 * (1 - Math.cos(Math.PI * e))
        }
    },
    Exponential: {
        In: function(e) {
            return 0 === e ? 0 : Math.pow(1024, e - 1)
        },
        Out: function(e) {
            return 1 === e ? 1 : 1 - Math.pow(2, -10 * e)
        },
        InOut: function(e) {
            return 0 === e ? 0 : 1 === e ? 1 : (e *= 2) < 1 ? .5 * Math.pow(1024, e - 1) : .5 * (-Math.pow(2, -10 * (e - 1)) + 2)
        }
    },
    Circular: {
        In: function(e) {
            return 1 - Math.sqrt(1 - e * e)
        },
        Out: function(e) {
            return Math.sqrt(1 - --e * e)
        },
        InOut: function(e) {
            return (e *= 2) < 1 ? -.5 * (Math.sqrt(1 - e * e) - 1) : .5 * (Math.sqrt(1 - (e -= 2) * e) + 1)
        }
    },
    Elastic: {
        In: function(e) {
            var t, n = .1,
                i = .4;
            return 0 === e ? 0 : 1 === e ? 1 : (!n || 1 > n ? (n = 1, t = i / 4) : t = i * Math.asin(1 / n) / (2 * Math.PI), -(n * Math.pow(2, 10 * (e -= 1)) * Math.sin((e - t) * (2 * Math.PI) / i)))
        },
        Out: function(e) {
            var t, n = .1,
                i = .4;
            return 0 === e ? 0 : 1 === e ? 1 : (!n || 1 > n ? (n = 1, t = i / 4) : t = i * Math.asin(1 / n) / (2 * Math.PI), n * Math.pow(2, -10 * e) * Math.sin((e - t) * (2 * Math.PI) / i) + 1)
        },
        InOut: function(e) {
            var t, n = .1,
                i = .4;
            return 0 === e ? 0 : 1 === e ? 1 : (!n || 1 > n ? (n = 1, t = i / 4) : t = i * Math.asin(1 / n) / (2 * Math.PI), (e *= 2) < 1 ? -.5 * (n * Math.pow(2, 10 * (e -= 1)) * Math.sin((e - t) * (2 * Math.PI) / i)) : n * Math.pow(2, -10 * (e -= 1)) * Math.sin((e - t) * (2 * Math.PI) / i) * .5 + 1);
        }
    },
    Back: {
        In: function(e) {
            var t = 1.70158;
            return e * e * ((t + 1) * e - t)
        },
        Out: function(e) {
            var t = 1.70158;
            return --e * e * ((t + 1) * e + t) + 1
        },
        InOut: function(e) {
            var t = 2.5949095;
            return (e *= 2) < 1 ? .5 * (e * e * ((t + 1) * e - t)) : .5 * ((e -= 2) * e * ((t + 1) * e + t) + 2)
        }
    },
    Bounce: {
        In: function(e) {
            return 1 - TWEEN.Easing.Bounce.Out(1 - e)
        },
        Out: function(e) {
            return 1 / 2.75 > e ? 7.5625 * e * e : 2 / 2.75 > e ? 7.5625 * (e -= 1.5 / 2.75) * e + .75 : 2.5 / 2.75 > e ? 7.5625 * (e -= 2.25 / 2.75) * e + .9375 : 7.5625 * (e -= 2.625 / 2.75) * e + .984375
        },
        InOut: function(e) {
            return .5 > e ? .5 * TWEEN.Easing.Bounce.In(2 * e) : .5 * TWEEN.Easing.Bounce.Out(2 * e - 1) + .5
        }
    }
}, 
TWEEN.Interpolation = {
    Linear: function(e, t) {
        var n = e.length - 1,
            i = n * t,
            r = Math.floor(i),
            o = TWEEN.Interpolation.Utils.Linear;
        return 0 > t ? o(e[0], e[1], i) : t > 1 ? o(e[n], e[n - 1], n - i) : o(e[r], e[r + 1 > n ? n : r + 1], i - r)
    },
    Bezier: function(e, t) {
        var n, i = 0,
            r = e.length - 1,
            o = Math.pow,
            a = TWEEN.Interpolation.Utils.Bernstein;
        for (n = 0; r >= n; n++) i += o(1 - t, r - n) * o(t, n) * e[n] * a(r, n);
        return i
    },
    CatmullRom: function(e, t) {
        var n = e.length - 1,
            i = n * t,
            r = Math.floor(i),
            o = TWEEN.Interpolation.Utils.CatmullRom;
        return e[0] === e[n] ? (0 > t && (r = Math.floor(i = n * (1 + t))), o(e[(r - 1 + n) % n], e[r], e[(r + 1) % n], e[(r + 2) % n], i - r)) : 0 > t ? e[0] - (o(e[0], e[0], e[1], e[1], -i) - e[0]) : t > 1 ? e[n] - (o(e[n], e[n], e[n - 1], e[n - 1], i - n) - e[n]) : o(e[r ? r - 1 : 0], e[r], e[r + 1 > n ? n : r + 1], e[r + 2 > n ? n : r + 2], i - r)
    },
    Utils: {
        Linear: function(e, t, n) {
            return (t - e) * n + e
        },
        Bernstein: function(e, t) {
            var n = TWEEN.Interpolation.Utils.Factorial;
            return n(e) / n(t) / n(e - t)
        },
        Factorial: function() {
            var e = [1];
            return function(t) {
                var n, i = 1;
                if (e[t]) return e[t];
                for (n = t; n > 1; n--) i *= n;
                return e[t] = i
            }
        }(),
        CatmullRom: function(e, t, n, i, r) {
            var o = .5 * (n - e),
                a = .5 * (i - t),
                s = r * r,
                l = r * s;
            return (2 * t - 2 * n + o + a) * l + (-3 * t + 3 * n - 2 * o - a) * s + o * r + t
        }
    }
};